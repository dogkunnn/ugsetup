import discord
from discord.ext import commands
import os
import asyncio

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Token ‡πÅ‡∏•‡∏∞ Path ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå
TOKEN = 'YOUR_BOT_TOKEN'  # ‡πÉ‡∏™‡πà Token ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏Ñ‡∏∏‡∏ì
FILE_PATH = '/storage/emulated/0/Delta/AUTOexecute/moon.txt'  # ‡πÉ‡∏™‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå moon.txt

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Intents
intents = discord.Intents.default()
intents.messages = True  # ‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ü‡∏±‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡πÑ‡∏î‡πâ
intents.message_content = True  # ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Message Content Intent
bot = commands.Bot(command_prefix='!', intents=intents)

TARGET_CHANNEL_ID = None  # ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ targetJobId
panel_message = None  # ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Panel


class PanelView(discord.ui.View):
    def __init__(self, bot, cog):
        super().__init__(timeout=None)
        self.bot = bot
        self.cog = cog

    @discord.ui.button(label="‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", style=discord.ButtonStyle.danger, custom_id="delete_messages")
    async def delete_messages(self, interaction: discord.Interaction, button: discord.ui.Button):
        global TARGET_CHANNEL_ID, panel_message
        if interaction.channel.id == TARGET_CHANNEL_ID:
            try:
                # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô Panel
                async for message in interaction.channel.history(limit=100):
                    if message.id != panel_message.id:  # ‡∏Ç‡πâ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô Panel
                        await message.delete()

                await interaction.response.send_message("‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
            except discord.Forbidden:
                await interaction.response.send_message("‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
            except discord.HTTPException as e:
                await interaction.response.send_message(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°: {str(e)}", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ", ephemeral=True)


class DismissView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", style=discord.ButtonStyle.secondary)
    async def dismiss_message(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.message.delete()  # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°


class MoonBot(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.current_job_id = self.load_job_id()  # ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á targetJobId

    def load_job_id(self):
        """‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤ targetJobId ‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå"""
        try:
            with open(FILE_PATH, 'r') as file:
                content = file.readlines()
            for line in content:
                if "local targetJobId =" in line:
                    print(f"‚úÖ ‡πÇ‡∏´‡∏•‡∏î targetJobId ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {line.strip()}")
                    return line.strip()
        except FileNotFoundError:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {FILE_PATH}")
            return "Not Found"
        return "Not Found"

    def update_job_id(self, new_job_id):
        """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ targetJobId ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå"""
        try:
            new_job_id = new_job_id.strip('"')
            with open(FILE_PATH, 'r') as file:
                content = file.readlines()

            for i in range(len(content)):
                if "local targetJobId =" in content[i]:
                    content[i] = f'local targetJobId = "{new_job_id}"\n'
                    break

            with open(FILE_PATH, 'w') as file:
                file.writelines(content)

            self.current_job_id = f'local targetJobId = "{new_job_id}"'
            print(f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï targetJobId ‡πÄ‡∏õ‡πá‡∏ô: {new_job_id}")

        except FileNotFoundError:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {FILE_PATH}")
            self.current_job_id = "Not Found"

    def remove_backticks(self, text):
        """‡∏•‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ backticks ‡∏≠‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"""
        if "`" in text:  # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ backtick ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
            cleaned_text = text.replace('`', '')  # ‡∏•‡∏ö‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß `
            return cleaned_text, True  # ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å
        else:
            return text, False  # ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á

    @discord.app_commands.command(name="setup", description="Set the channel for receiving jobId")
    async def setup(self, interaction: discord.Interaction):
        """‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡∏à‡∏∞‡∏ü‡∏±‡∏á"""
        global TARGET_CHANNEL_ID, panel_message

        TARGET_CHANNEL_ID = interaction.channel.id
        with open("channel_id.txt", "w") as f:
            f.write(str(interaction.channel.id))

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed Panel
        embed = discord.Embed(
            title="üìã Target Job ID Panel",
            description=f"‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ `targetJobId`",
            color=discord.Color.blurple(),
        )
        embed.add_field(name="Current Job ID", value=self.current_job_id, inline=False)
        embed.set_footer(text="‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ")

        # ‡∏™‡πà‡∏á Panel ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°
        if panel_message:
            await panel_message.delete()
        view = PanelView(bot=self.bot, cog=self)
        panel_message = await interaction.channel.send(embed=embed, view=view)

        await interaction.response.send_message(f"‚úÖ ‡∏ö‡∏≠‡∏ó‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡πà‡∏≠‡∏á {interaction.channel.name} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ targetJobId ‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

    @commands.Cog.listener()
    async def on_message(self, message: discord.Message):
        """‡∏ü‡∏±‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"""
        global TARGET_CHANNEL_ID, panel_message

        if TARGET_CHANNEL_ID and message.channel.id == TARGET_CHANNEL_ID:
            if message.author == bot.user:
                return

            new_job_id = message.content.strip()
            cleaned_job_id, removed_backticks = self.remove_backticks(new_job_id)  # ‡∏•‡∏ö backticks ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ

            # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏ö backticks ‡∏≠‡∏≠‡∏Å
            if removed_backticks:
                # ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤ "‡∏•‡∏ö backticks"
                pass

            if cleaned_job_id:
                self.update_job_id(cleaned_job_id)

                # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Panel
                if panel_message:
                    embed = discord.Embed(
                        title="üìã Target Job ID Panel",
                        description=f"‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ `targetJobId`",
                        color=discord.Color.blurple(),
                    )
                    embed.add_field(name="Current Job ID", value=self.current_job_id, inline=False)
                    embed.set_footer(text="‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ")
                    await panel_message.edit(embed=embed)

                # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏Ñ‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï targetJobId
                embed = discord.Embed(
                    description=f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï targetJobId ‡πÄ‡∏õ‡πá‡∏ô: `{cleaned_job_id}`",
                    color=discord.Color.green(),
                )
                view = DismissView()
                update_message = await message.channel.send(embed=embed, view=view)

                # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡πà‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
                await message.delete()

                # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                await asyncio.sleep(10)  # ‡∏£‡∏≠ 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                try:
                    await update_message.delete()  # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡∏™‡πà‡∏á‡πÑ‡∏õ
                except discord.HTTPException:
                    pass  # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ

@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user}!")
    await bot.tree.sync()


async def main():
    async with bot:
        await bot.add_cog(MoonBot(bot))
        await bot.start(TOKEN)


if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
        
