import discord
from discord import app_commands
from discord.ext import commands

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Token ‡πÅ‡∏•‡∏∞ Path ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå
TOKEN = 'YOUR_BOT_TOKEN'  # ‡πÉ‡∏™‡πà Token ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏Ñ‡∏∏‡∏ì
FILE_PATH = '/storage/emulated/0/Delta/AUTOexecute/moon.txt'  # ‡πÉ‡∏™‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå moon.txt

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Intents
intents = discord.Intents.default()
bot = commands.Bot(command_prefix='!', intents=intents)


class MoonBot(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="edit", description="Edit the targetJobId in moon.txt")
    @app_commands.describe(job_id="Enter the new targetJobId")
    async def edit(self, interaction: discord.Interaction, job_id: str):
        """‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç targetJobId"""
        try:
            # ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
            with open(FILE_PATH, 'r') as file:
                content = file.readlines()

            # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏Ç‡∏≠‡∏á targetJobId
            old_value = None
            for line in content:
                if "local targetJobId =" in line:
                    old_value = line.strip()
                    break

            if old_value is None:
                await interaction.response.send_message(
                    "‚ùå **Error:** `targetJobId` not found in the file.",
                    ephemeral=True
                )
                return

            # ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            for i in range(len(content)):
                if "local targetJobId =" in content[i]:
                    content[i] = f'local targetJobId = "{job_id}"\n'
                    break

            # ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå
            with open(FILE_PATH, 'w') as file:
                file.writelines(content)

            # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
            embed = discord.Embed(
                title="‚úÖ File Updated Successfully",
                color=discord.Color.green()
            )
            embed.add_field(name="Before", value=f"```lua\n{old_value}\n```", inline=False)
            embed.add_field(name="After", value=f"```lua\nlocal targetJobId = \"{job_id}\"\n```", inline=False)
            embed.set_footer(text="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡πà‡∏≤ targetJobId ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

            await interaction.response.send_message(embed=embed)

        except FileNotFoundError:
            await interaction.response.send_message(
                "‚ùå **Error:** The file `moon.txt` was not found.",
                ephemeral=True
            )
        except Exception as e:
            await interaction.response.send_message(
                f"‚ùå **An error occurred:** {e}",
                ephemeral=True
            )

    @app_commands.command(name="check", description="Check the current targetJobId in moon.txt")
    async def check(self, interaction: discord.Interaction):
        """‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö targetJobId"""
        try:
            # ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå
            with open(FILE_PATH, 'r') as file:
                content = file.readlines()

            # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡πà‡∏≤ targetJobId
            job_id = None
            for line in content:
                if "local targetJobId =" in line:
                    job_id = line.strip()
                    break

            if job_id is None:
                await interaction.response.send_message(
                    "‚ùå **Error:** `targetJobId` not found in the file.",
                    ephemeral=True
                )
                return

            # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
            embed = discord.Embed(
                title="üîç Current targetJobId",
                description=f"```lua\n{job_id}\n```",
                color=discord.Color.blue()
            )
            embed.set_footer(text="‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ targetJobId ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")

            await interaction.response.send_message(embed=embed)

        except FileNotFoundError:
            await interaction.response.send_message(
                "‚ùå **Error:** The file `moon.txt` was not found.",
                ephemeral=True
            )
        except Exception as e:
            await interaction.response.send_message(
                f"‚ùå **An error occurred:** {e}",
                ephemeral=True
            )


# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏ô Slash Commands
@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user}!")
    try:
        await bot.tree.sync()  # ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Slash
        print("‚úÖ Slash commands synced!")
    except Exception as e:
        print(f"‚ùå Failed to sync commands: {e}")


async def main():
    async with bot:
        # ‡πÄ‡∏û‡∏¥‡πà‡∏° Cog ‡πÉ‡∏ô‡∏ö‡∏≠‡∏ó
        await bot.add_cog(MoonBot(bot))
        await bot.start(TOKEN)

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
